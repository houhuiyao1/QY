/**
 * @file 点赞组件
 * @author liji(liji03@baidu.com)
 */
/* globals Page, swan */
const TEXT = {
    ZAN: '赞',
    SUCCESS: '已点赞',
    CANCEL: '已取消'
};
let isLogin = swan.isLoginSync().isLogin;
/* eslint-disable */
Component({
/* eslint-enable */
    externalClasses: ['class-name'],
    properties: {
        // bar配置
        // bar类型：含有两种，nomarl：代表不带评论输入框的；special：带有评论输入框
        mode: {
            type: String,
            value: 'special'
        },
        // 评论部分配置，包括评论框和评论
        // 是否可评论
        isComment: {
            type: Boolean,
            value: true
        },
        // 是否显示评论图标
        isShowComment: {
            type: Boolean,
            value: true
        },
        // 是否显示点赞图标
        isShowLike: {
            type: Boolean,
            value: true
        },
        // 是否显示分享图标
        isShowShare: {
            type: Boolean,
            value: true
        },
        // 在mode为special可配置如下两项
        // 评论框配置
        commentText: {
            type: String,
            value: '发表评论领积分'
        },
        // 气泡提示文案
        commentMsg: {
            type: String,
            value: ''
        },
        // 评论icon处的文案
        commentIconText: {
            type: String,
            value: '评论',
            observer: function (newVal, oldVal) {
                newVal && this.setData('commentIconText', newVal);
            }
        },
        // 以下为评论发布器相关配置
        sendBackgroundColor: {
            type: String,
            value: '#38f'
        },
        sendTextColor: {
            type: String,
            value: '#fff'
        },
        sendText: {
            type: String,
            value: '发送'
        },
        contentPlaceholder: {
            type: String,
            value: '请输入评论内容'
        },
        moduleList: {
            type: Array,
            value: []
        },
        emojiPath: {
            type: String,
            value: ''
        },
        // 组件版发布器专用属性
        focus: {
            type: Boolean,
            value: false
        },
        // 组件版发布器上传图片配置
        upLoadImage: {
            type: Object,
            value: {
                isUpLoadImage: false,
                requestUrl: ''
            }
        },
        // 评论发布器配置
        commentParam: {
            type: Object,
            value: {
                // 动态在开发者侧的唯一标识。
                // 当为空，默认开发者将数据托管在宿主，小程序侧创建动态后返回唯一标识给开发者。
                snid: '',
                // 为空，表示对动态评论。
                // 不为空，表示对评论进行评论。若小程序侧没有 spid 对应的标识，则认为此时对主题进行评论。
                spid: '',
                // 回复 id
                srid: '',
                // 动态的 schema 格式，跳转用
                path: '',
                // 小程序唯一标识
                appkey: '',
                // 评论的标题
                title: '',
                openid: '',
                // 评论的动态内容
                content: ''
            }
        },

        // 以下为分享配置项
        // 调起分享面板分享时的参数
        shareParam: {
            type: Object,
            value: {
                title: '',
                content: '',
                path: '',
                imageUrl: ''
            }
        },
        // 仅在mode为nomarl时设置有效
        shareText: {
            type: String,
            value: '转发',
            observer: function (newVal, oldVal) {
                newVal && this.setData('shareText', newVal);
            }
        },
        // 以下为点赞配置项
        // 点赞按钮上的文案，默认为赞，仅在mode为nomarl时设置有效
        likeText: {
            type: String,
            value: TEXT.ZAN
        },
        // 点赞数，仅在mode为nomarl时设置有效
        likeNum: {
            type: Number,
            value: 0
        },
        // 点赞动效形式
        // 0.无动效；1.轻动效；2.强动效
        likeAnimationType: {
            type: Number,
            value: 1
        },
        // 点赞图标类型,提供两种
        // 1:hand(默认); 2:heart
        likeIconType: {
            type: String,
            value: 'hand'
        },
        // 点赞的对象类型
        // 0:代表动态; 1:代表评论
        isLiked: {
            type: Number,
            value: 0
        },
        // 点赞的对象类型
        // 0:代表动态; 1:代表评论
        likeType: {
            type: Number,
            value: 0
        },
        // 点赞百度服务请求所需的参数
        likeParam: {
            type: Object,
            value: {
                // 小程序开发者唯一标识
                openid: '',
                snid: '',
                // 不为空，表示对评论进行点赞。若小程序侧没有 srid 对应的标识，则认为此时对主题进行点赞。
                srid: '',
                appkey: ''
            }
        },
        // 点赞toast相关配置
        likeToast: {
            type: Object,
            value: {
                // 点赞后的结果反馈
                isShowToast: true,
                // toast文案，默认为已点赞、已取消
                toastText: [TEXT.SUCCESS, TEXT.CANCEL]
            }
        }
    },
    data: {
        isLogin,
        showPublish: false,
        showIconMsg: true
    },
    attached(format, data) {
        let {mode, isShowComment, isShowLike, isShowShare} = this.data;
        if (mode === 'special') {
            return;
        }
        let showComment = isShowComment ? 1 : 0;
        let showLike = isShowLike ? 1 : 0;
        let showShare = isShowShare ? 1 : 0;
        let settingMap = [showComment, showLike, showShare];
        let newMap = settingMap.filter(item => item === 1);
        if (newMap.length < 2) {
            this.setData({
                isShowComment: true,
                isShowLike: true,
                isShowShare: true
            });
        }
    },
    methods: {
        error(e) {
            this.triggerEvent('error', e);
        },
        openShare() {
            let {title, content, path, imageUrl} = this.data;
            swan.openShare({
                title,
                content,
                path,
                imageUrl,
                success: res => {
                    this.triggerEvent('sharesuccess', res);
                },
                fail: err => {
                    this.triggerEvent('sharefail', err);
                }
            });
        },
        openReplyEditor() {
            let isComment = this.data.isComment;
            if (!isComment) {
                swan.showToast({
                    icon: 'none',
                    title: '该内容不可评论'
                });
                return;
            }
            this.setData('showPublish', true);
        },
        commentMsg() {
            let isComment = this.data.isComment;
            if (!isComment) {
                swan.showToast({
                    icon: 'none',
                    title: '该内容不可评论'
                });
                return;
            }
            this.triggerEvent('comment');
        },
        browseMode() {
            this.triggerEvent('browsemode');
        },
        relaseComment(e) {
            let {inputValue, uploadImgUrl} = e.detail;
            const imgText = uploadImgUrl && uploadImgUrl.length > 0 ? '[图片]' : '';
            const showIconMsg = uploadImgUrl && uploadImgUrl.length > 0 || inputValue ? 0 : 1;

            this.setData({
                commentText: imgText + inputValue,
                showIconMsg
            });
            this.triggerEvent('relasecomment', e);
        },
        commentPanelClose(e) {
            this.triggerEvent('commentpanelclose', e);
        },
        previewImage() {
            this.triggerEvent('previewimage');
        },
        likeSuccess(e) {
            this.triggerEvent('likesuccess', e);
        },
        likeFail(e) {
            this.triggerEvent('likefail', e);
        }
    }
});
