/**
 * @file 预约组件
 * @author zhangwen(zhangwen22@baidu.com)
 */

/* globals Component, swan */

// 预约组件按钮的默认文案
const BTN_DEFAULT_TEXT = {
    SUBSCRIBED: '已预约',
    UNSUBSCRIBE: '预约'
};
// toast 的默认文案
const TOAST_DEFAULT_TEXT = {
    SUBSCRIBED: '预约成功',
    CANCELD: '已取消预约',
    FAILED: '请求失败，请稍后重试'
};

/* eslint-enable */
Component({// eslint-disable-line
    /* eslint-enable */
    // 支持开发者自定义按钮样式，subscribed-class 对应已预约样式，unsubscribed-class 对应未预约样式
    externalClasses: ['subscribed-class', 'unsubscribed-class'],
    properties: {
        backgroundColor: {
            type: String,
            value: ''
        },
        templateId: {
            type: String,
            value: ''
        },
        subscribeId: {
            type: String,
            value: ''
        },
        // 支持开发者自定义按钮文案，第一个对应未预约文案，第二个对应已预约文案
        statusText: {
            type: Array,
            value: [BTN_DEFAULT_TEXT.UNSUBSCRIBE, BTN_DEFAULT_TEXT.SUBSCRIBED]
        },
        // 支持开发者自定义是否弹出成功状态的 toast
        showSuccessToast: {
            type: Boolean,
            value: true
        },
        // 支持开发者自定义成功状态 toast 的文案，第一个对应预约成功的文案，第二个对应取消预约成功的文案
        successToastText: {
            type: Array,
            value: [TOAST_DEFAULT_TEXT.SUBSCRIBED, TOAST_DEFAULT_TEXT.CANCELD]
        }
    },
    data: {
        subscribedText: BTN_DEFAULT_TEXT.SUBSCRIBED,
        unsubscribedText: BTN_DEFAULT_TEXT.UNSUBSCRIBE,
        isSubscribed: false,
        isLoading: false,
        btnBgClass: 'btn-bg-blue'
    },
    lifetimes: {
        attached() {
            this.renderBtnBgClass();
            this.querySubscribe();
        }
    },
    // 查询订阅消息
    querySubscribe() {
        const {templateId, subscribeId} = this.data;
        swan.subscribeService({
            templateId,
            subscribeId,
            type: 'query',
            success: res => {
                // status订阅状态；1 表示已订阅，0 表示已取消订阅
                const isSubscribed = res.status === 1;
                this.setData({
                    isSubscribed
                });
            }
        });
    },
    // 取消订阅信息
    cancelSubscribe() {
        const {templateId, subscribeId} = this.data;
        this.setData({
            isLoading: true
        });
        // const self = this;
        swan.subscribeService({
            templateId,
            subscribeId,
            type: 'cancel',
            success: res => {
                // status订阅状态；1 表示已订阅，0 表示已取消订阅
                const hasStatus = res.hasOwnProperty('status');
                const status = res.status;
                // 取消成功
                if (!hasStatus || (hasStatus && status !== -1)) {
                    this.setData({
                        isSubscribed: false
                    }, () => {
                        if (this.data.showSuccessToast) {
                            swan.showToast({
                                icon: 'none',
                                title: this.data.successToastText[1] || TOAST_DEFAULT_TEXT.CANCELD
                            });
                        }
                    });
                }
                else {
                    this.setData({
                        isSubscribed: true
                    }, () => {
                        swan.showToast({
                            icon: 'none',
                            title: TOAST_DEFAULT_TEXT.FAILED
                        });
                    });
                }
            },
            fail: () => {
                swan.showToast({
                    icon: 'none',
                    title: TOAST_DEFAULT_TEXT.FAILED
                });
            },
            complete: res => {
                this.setData({
                    isLoading: false
                });
                this.triggerEvent('cancelsubscribe', res);
            }
        });
    },
    // 添加订阅信息
    addSubscribe(e) {
        this.setData({
            isLoading: true
        }, () => {
            setTimeout(() => {
                this.setData({
                    isLoading: false
                });
            }, 300);
        });
        if (!+e.detail.status) {
            this.setData({
                isSubscribed: true
            }, () => {
                if (this.data.showSuccessToast) {
                    swan.showToast({
                        icon: 'none',
                        title: this.data.successToastText[0] || TOAST_DEFAULT_TEXT.SUBSCRIBED
                    });
                }
            });
        }
        else {
            this.setData({
                isSubscribed: false
            }, () => {
                swan.showToast({
                    icon: 'none',
                    title: TOAST_DEFAULT_TEXT.FAILED
                });
            });
        }
        // 无论是否预约成功，回调返回值均暴露给开发者，方便定位问题
        this.triggerEvent('addsubscribe', e.detail);
    },
    // 渲染三种按钮背景色
    renderBtnBgClass() {
        const backgroundColor = this.data.backgroundColor;
        let btnBgClass = '';
        switch (backgroundColor) {
            case 'blue':
                btnBgClass = 'btn-bg-blue';
                break;
            case 'white':
                btnBgClass = 'btn-bg-white';
                break;
            case 'none':
                btnBgClass = 'btn-bg-none';
                break;
            case 'opacity':
                btnBgClass = 'btn-bg-opacity';
                break;
        }
        this.setData({
            btnBgClass
        });
    }
});
