/**
 * @file 关注组件
 * @author liji(liji03@baidu.com)
 */
/* globals Page, swan */
const TEXT = {
    CONCERN: '关注',
    CONCERNED: '已关注',
    SUCCESS: '关注成功',
    CANCEL: '已取消关注'
};
/* eslint-disable */
Component({
/* eslint-enable */
    externalClasses: ['class-name'],
    properties: {
        // 关注按钮模式
        // 1.icon: 仅有图标; 2.text: 文字版本; 3.mixture: 图表文字结合
        mode: {
            type: String,
            value: 'text'
        },
        // 当且仅当mode为text时有以下4种按钮颜色可选
        // 1.blue; 2.white; 3.opacity; 4.none
        // 当且仅当mode为icon时有以下2种按钮颜色可选
        // 1.blue; 2.white;
        backgroundColor: {
            type: String,
            value: 'blue'
        },
        // 关注的状态
        isFollowed: {
            type: Boolean,
            value: false,
            observer(value) {
                let followNum = value ? 1 : 0;
                this.setData({
                    followNum
                });
            }
        },
        // 关注按钮上的文案,默认为关注、已关注
        followText: {
            type: Array,
            value: [TEXT.CONCERN, TEXT.CONCERNED]
        },
        // 关注后的结果反馈
        isShowToast: {
            type: Boolean,
            value: true
        },
        // toast文案，默认为关注成功、已取消关注
        toastText: {
            type: Array,
            value: [TEXT.SUCCESS, TEXT.CANCEL]
        }
    },
    data: {
        isLoading: false,
        followNum: 0,
        classN: 'primary'
    },
    lifetimes: {
        ready() {
            let backgroundColor = this.data.backgroundColor;
            let textBtnClass = '';
            let iconClass = '';
            switch (backgroundColor) {
                case 'blue':
                    textBtnClass = 'btn-bg-blue';
                    iconClass = 'icon-bg-blue';
                    break;
                case 'white':
                    textBtnClass = 'btn-bg-white';
                    iconClass = 'icon-bg-white';
                    break;
                case 'opacity':
                    textBtnClass = 'btn-bg-opacity';
                    break;
                case 'none':
                    textBtnClass = 'btn-bg-none';
                    break;
            }
            this.setData({
                textBtnClass,
                iconClass
            });
        }
    },
    methods: {
        onTap: function (e) {
            this.triggerEvent('follow');
        }
    }
});
